{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Predictor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": null,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#1. Load dependencies\n",
    "import os\n",
    "import geopandas as gpd\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib.cm as cm\n",
    "import matplotlib.colors as colors\n",
    "\n",
    "from sweep import config\n",
    "from SWEEP_predictor import main\n",
    "\n",
    "from dotenv import load_dotenv\n",
    "load_dotenv() "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The AOI is the polygon shape or shapes in which emissions will be estimated. \n",
    "In the Predictor function, this is aoi_source, and it can be either a geopandas geodataframe,\n",
    "or a path to a geopackage or shapefile.\n",
    "\n",
    "The aoi_source will have each row or feature indexed seperately, with all columns retained in the final products."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "C:\\Users\\gstarrs\\Projects\\CARB\\SWEEP\\sweep_test\\data\\demo_shapes\\demo_multipoly.shp\n",
      "C:\\Users\\gstarrs\\Projects\\CARB\\SWEEP\\sweep_test\\data\\demo_shapes\\demo_multipoly.shp\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": null,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Here we use demo_poly2, or the outline of the Coastal fire.\n",
    "#aoi_path = os.path.join(config.demo_dir, \"demo_poly2.gpkg\")\n",
    "aoi_path = os.path.join(config.demo_dir, \"demo_multipoly.shp\")\n",
    "print(aoi_path)\n",
    "aoi = gpd.read_file(aoi_path)\n",
    "aoi.plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fetching parcel data...\n",
      "Fetching parcel data...\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 0, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/parcels/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=0\n",
      "Status code: 200\n",
      "Offset: 0, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/parcels/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=0\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/parcels/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=500\n",
      "Status code: 200\n",
      "Offset: 500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/parcels/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=500\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 1000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/parcels/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=1000\n",
      "Status code: 200\n",
      "Offset: 1000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/parcels/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=1000\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 1500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/parcels/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=1500\n",
      "Status code: 200\n",
      "Offset: 1500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/parcels/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=1500\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 2000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/parcels/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=2000\n",
      "Status code: 200\n",
      "Offset: 2000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/parcels/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=2000\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 2500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/parcels/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=2500\n",
      "Status code: 200\n",
      "Offset: 2500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/parcels/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=2500\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 3000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/parcels/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=3000\n",
      "Status code: 200\n",
      "Offset: 3000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/parcels/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=3000\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 0, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/parcels/us/geometry?wkt=POLYGON+%28%28-120.9628979569999387+39.0844010470000285%2C+-120.9628979569999387+39.1481078390000334%2C+-120.9954806439999402+39.1481078390000334%2C+-120.9954806439999402+39.0844010470000285%2C+-120.9628979569999387+39.0844010470000285%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=0\n",
      "Status code: 200\n",
      "Offset: 0, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/parcels/us/geometry?wkt=POLYGON+%28%28-120.9628979569999387+39.0844010470000285%2C+-120.9628979569999387+39.1481078390000334%2C+-120.9954806439999402+39.1481078390000334%2C+-120.9954806439999402+39.0844010470000285%2C+-120.9628979569999387+39.0844010470000285%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=0\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/parcels/us/geometry?wkt=POLYGON+%28%28-120.9628979569999387+39.0844010470000285%2C+-120.9628979569999387+39.1481078390000334%2C+-120.9954806439999402+39.1481078390000334%2C+-120.9954806439999402+39.0844010470000285%2C+-120.9628979569999387+39.0844010470000285%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=500\n",
      "Status code: 200\n",
      "Offset: 500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/parcels/us/geometry?wkt=POLYGON+%28%28-120.9628979569999387+39.0844010470000285%2C+-120.9628979569999387+39.1481078390000334%2C+-120.9954806439999402+39.1481078390000334%2C+-120.9954806439999402+39.0844010470000285%2C+-120.9628979569999387+39.0844010470000285%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=500\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 0, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=0\n",
      "Status code: 200\n",
      "Offset: 0, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=0\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=500\n",
      "Status code: 200\n",
      "Offset: 500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=500\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 1000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=1000\n",
      "Status code: 200\n",
      "Offset: 1000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=1000\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 1500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=1500\n",
      "Status code: 200\n",
      "Offset: 1500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=1500\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 2000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=2000\n",
      "Status code: 200\n",
      "Offset: 2000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=2000\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 2500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=2500\n",
      "Status code: 200\n",
      "Offset: 2500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=2500\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 3000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=3000\n",
      "Status code: 200\n",
      "Offset: 3000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=3000\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 3500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=3500\n",
      "Status code: 200\n",
      "Offset: 3500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=3500\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 4000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=4000\n",
      "Status code: 200\n",
      "Offset: 4000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=4000\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 4500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=4500\n",
      "Status code: 200\n",
      "Offset: 4500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=4500\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 5000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=5000\n",
      "Status code: 200\n",
      "Offset: 5000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=5000\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 5500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=5500\n",
      "Status code: 200\n",
      "Offset: 5500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=5500\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 6000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=6000\n",
      "Status code: 200\n",
      "Offset: 6000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=6000\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 6500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=6500\n",
      "Status code: 200\n",
      "Offset: 6500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=6500\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 7000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=7000\n",
      "Status code: 200\n",
      "Offset: 7000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=7000\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 7500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=7500\n",
      "Status code: 200\n",
      "Offset: 7500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=7500\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 8000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=8000\n",
      "Status code: 200\n",
      "Offset: 8000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=8000\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 8500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=8500\n",
      "Status code: 200\n",
      "Offset: 8500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=8500\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 9000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=9000\n",
      "Status code: 200\n",
      "Offset: 9000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=9000\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 9500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=9500\n",
      "Status code: 200\n",
      "Offset: 9500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=9500\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 10000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=10000\n",
      "Status code: 200\n",
      "Offset: 10000, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.5370150449999755+38.9046662170000559%2C+-120.5370150449999755+39.1784855260000313%2C+-120.8459057469999607+39.1784855260000313%2C+-120.8459057469999607+38.9046662170000559%2C+-120.5370150449999755+38.9046662170000559%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=10000\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 0, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.9628979569999387+39.0844010470000285%2C+-120.9628979569999387+39.1481078390000334%2C+-120.9954806439999402+39.1481078390000334%2C+-120.9954806439999402+39.0844010470000285%2C+-120.9628979569999387+39.0844010470000285%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=0\n",
      "Status code: 200\n",
      "Offset: 0, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.9628979569999387+39.0844010470000285%2C+-120.9628979569999387+39.1481078390000334%2C+-120.9954806439999402+39.1481078390000334%2C+-120.9954806439999402+39.0844010470000285%2C+-120.9628979569999387+39.0844010470000285%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=0\n",
      "Status code: 200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Offset: 500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.9628979569999387+39.0844010470000285%2C+-120.9628979569999387+39.1481078390000334%2C+-120.9954806439999402+39.1481078390000334%2C+-120.9954806439999402+39.0844010470000285%2C+-120.9628979569999387+39.0844010470000285%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=500\n",
      "Status code: 200\n",
      "Processing parcels...\n",
      "Parcel and assessment datasets joined and fields cleaned.\n",
      "Joined dataset clipped to fire geometry.\n",
      "Generating synthetic BSDB...\n",
      "Offset: 500, Limit: 500\n",
      "Request URL: https://api.lightboxre.com/v1/assessments/us/geometry?wkt=POLYGON+%28%28-120.9628979569999387+39.0844010470000285%2C+-120.9628979569999387+39.1481078390000334%2C+-120.9954806439999402+39.1481078390000334%2C+-120.9954806439999402+39.0844010470000285%2C+-120.9628979569999387+39.0844010470000285%29%29&bufferDistance=0&bufferUnit=m&limit=500&offset=500\n",
      "Status code: 200\n",
      "Processing parcels...\n",
      "Parcel and assessment datasets joined and fields cleaned.\n",
      "Joined dataset clipped to fire geometry.\n",
      "Generating synthetic BSDB...\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['$ref_x', 'id', '$metadata_geocode', 'FIPS_CODE', 'PARCEL_APN', 'assessment_apn', 'CENSUS_BLOCK_GROUP', 'CENSUS_TRACT', 'COUNTYNAME',\n",
      "       'derived_calculatedLotArea', 'USE_CODE_MUNI', 'USE_CODE_MUNI_DESC', 'USE_CODE_STD_LPS', 'USE_CODE_STD_DESC_LPS',\n",
      "       'landUse_normalized_categoryDescription', 'SITE_ADDR', 'location_countryCode', 'SITE_CITY', 'SITE_STATE', 'SITE_ZIP', 'occupant_owner',\n",
      "       'opportunityZone', 'YR_BLT', 'primaryStructure_yearRenovated', 'primaryStructure_units_x', 'LIVING_SQFT', 'subdivision', 'structures', 'geometry',\n",
      "       'aoi_index', 'aoi_fire_name', 'aoi_incident_n', 'aoi_start_date', 'aoi_group_id', 'aoi_fp_source', '$ref_y', 'ASSMT_APN', 'assmt_id',\n",
      "       'parcel_$ref', 'parcel_id', '$metadata', 'assessedValue_total', 'assessedValue_year', 'assessedLotSize', 'lot_lotNumber', 'lot_blockNumber',\n",
      "       'zoning_assessment', 'transaction_multipleApnFlag', 'STORIES_NUMBER', 'assmt_yrblt', 'primaryStructure_buildingArea', 'primaryStructure_units_y',\n",
      "       'ASSMT_SQFT', 'primaryStructure_numberOfBuildings', 'asst_geom', 'centroid', 'index_right', 'COUNTY', 'CO_NUM', 'BASIN_NAME', 'BASA_ID',\n",
      "       'DIS_NAME', 'DIST_TYPE', 'DISA_ID', 'ISLAND_NAM', 'ISLAND_ID', 'BAY_SPLINT', 'BAY_ID', 'COABDIS_ID', 'COABDIS_AR'],\n",
      "      dtype='object')\n",
      "Before drop ['$REF_X', 'ID', '$METADATA_GEOCODE', 'FIPS_CODE', 'PARCEL_APN', 'ASSESSMENT_APN', 'CENSUS_BLOCK_GROUP', 'CENSUS_TRACT', 'COUNTYNAME', 'DERIVED_CALCULATEDLOTAREA', 'USE_CODE_MUNI', 'USE_CODE_MUNI_DESC', 'USE_CODE_STD_LPS', 'USE_CODE_STD_DESC_LPS', 'LANDUSE_NORMALIZED_CATEGORYDESCRIPTION', 'SITE_ADDR', 'LOCATION_COUNTRYCODE', 'SITE_CITY', 'SITE_STATE', 'SITE_ZIP', 'OCCUPANT_OWNER', 'OPPORTUNITYZONE', 'YR_BLT', 'PRIMARYSTRUCTURE_YEARRENOVATED', 'PRIMARYSTRUCTURE_UNITS_X', 'LIVING_SQFT', 'SUBDIVISION', 'STRUCTURES', 'GEOMETRY', 'AOI_INDEX', 'AOI_FIRE_NAME', 'AOI_INCIDENT_N', 'AOI_START_DATE', 'AOI_GROUP_ID', 'AOI_FP_SOURCE', '$REF_Y', 'ASSMT_APN', 'ASSMT_ID', 'PARCEL_$REF', 'PARCEL_ID', '$METADATA', 'ASSESSEDVALUE_TOTAL', 'ASSESSEDVALUE_YEAR', 'ASSESSEDLOTSIZE', 'LOT_LOTNUMBER', 'LOT_BLOCKNUMBER', 'ZONING_ASSESSMENT', 'TRANSACTION_MULTIPLEAPNFLAG', 'STORIES_NUMBER', 'ASSMT_YRBLT', 'PRIMARYSTRUCTURE_BUILDINGAREA', 'PRIMARYSTRUCTURE_UNITS_Y', 'ASSMT_SQFT', 'PRIMARYSTRUCTURE_NUMBEROFBUILDINGS', 'ASST_GEOM', 'CENTROID', 'INDEX_RIGHT', 'COUNTY', 'CO_NUM', 'BASIN_NAME', 'BASA_ID', 'DIS_NAME', 'DIST_TYPE', 'DISA_ID', 'ISLAND_NAM', 'ISLAND_ID', 'BAY_SPLINT', 'BAY_ID', 'COABDIS_ID', 'COABDIS_AR', 'USECODE_SD', 'PARCEL_CAT', 'CAT', 'INCIDENTNAME', 'CLEAN_DATE', 'YEAR', 'MONTH', 'FP_SQFT', 'FP_PMFT', 'SQFT', 'SQFT_SOURCE']\n",
      "Missing columns: {'OBJECTID', 'TOTAL_ROOMS', 'geometry', 'CO_NAME', 'CITY', 'STREETSUFFIX', 'STRUCTURETYPE', 'BEDROOMS', 'SITE_DIRECTION', 'HAZARDTYPE', 'SITE_UNIT_PREFIX', 'APN', 'STRUCTURECATEGORY', 'INCIDENTSTARTDATE', 'PARCEL_CAT_MATCH', 'SITE_HOUSE_NUMBER', 'SITEADDRESS', 'FEMA_SQFT', 'INCIDENTNUM', 'YEARBUILT', 'ZONING', 'ZIPCODE', 'FEMA_PMFT', 'SITE_UNIT_NUMBER', 'STREETNUMBER', 'GLOBALID', 'DAMAGE', 'STATE', 'UNITS_NUMBER', 'CALFIREUNIT', 'TOTAL_BATHS', 'centroid', 'COMMUNITY', 'STREETTYPE', 'STREETNAME', 'SQFEET'}\n",
      "Estimating emissions for pollutants: ['CO', 'NOx', 'SOx', 'PM', 'TOG']...\n",
      "C:\\Users\\gstarrs\\Projects\\CARB\\SWEEP\\sweep_test\\data\\emissions_factors\n",
      "Holder efs from: C:\\Users\\gstarrs\\Projects\\CARB\\SWEEP\\sweep_test\\data\\emissions_factors\\Holder_EFs.xlsx\n",
      "Requested pollutants: ['CO', 'NOx', 'SOx', 'PM', 'TOG']\n",
      "Returned pollutants: ['CO' 'NOx' 'SOx' 'PM' 'TOG']\n",
      "Aggregating report by: ['AIR DISTRICT', 'AOI_INDEX']...\n",
      "Aggregating on: ['AIR DISTRICT', 'AOI_INDEX']\n",
      "Calculating vehicle emissions with CARB factors...\n",
      "149\n",
      "Ratio provided: 214.56 vehicles estimated using ratio: 1.44\n",
      "CARB efs from: C:\\Users\\gstarrs\\Projects\\CARB\\SWEEP\\sweep_test\\data\\emissions_factors\\CARB_EFs.xlsx\n",
      "Requested pollutants: ['CO', 'NOx', 'SOx', 'PM']\n",
      "Index(['$ref_x', 'id', '$metadata_geocode', 'FIPS_CODE', 'PARCEL_APN', 'assessment_apn', 'CENSUS_BLOCK_GROUP', 'CENSUS_TRACT', 'COUNTYNAME',\n",
      "       'derived_calculatedLotArea', 'USE_CODE_MUNI', 'USE_CODE_MUNI_DESC', 'USE_CODE_STD_LPS', 'USE_CODE_STD_DESC_LPS',\n",
      "       'landUse_normalized_categoryDescription', 'SITE_ADDR', 'location_countryCode', 'SITE_CITY', 'SITE_STATE', 'SITE_ZIP', 'occupant_owner',\n",
      "       'opportunityZone', 'YR_BLT', 'primaryStructure_yearRenovated', 'primaryStructure_units_x', 'LIVING_SQFT', 'subdivision', 'structures', 'geometry',\n",
      "       'aoi_index', 'aoi_fire_name', 'aoi_incident_n', 'aoi_start_date', 'aoi_group_id', 'aoi_fp_source', '$ref_y', 'ASSMT_APN', 'assmt_id',\n",
      "       'parcel_$ref', 'parcel_id', '$metadata', 'assessedValue_total', 'assessedValue_year', 'assessedLotSize', 'lot_lotNumber', 'lot_blockNumber',\n",
      "       'zoning_assessment', 'transaction_multipleApnFlag', 'STORIES_NUMBER', 'assmt_yrblt', 'primaryStructure_buildingArea', 'primaryStructure_units_y',\n",
      "       'ASSMT_SQFT', 'primaryStructure_numberOfBuildings', 'asst_geom', 'centroid', 'index_right', 'COUNTY', 'CO_NUM', 'BASIN_NAME', 'BASA_ID',\n",
      "       'DIS_NAME', 'DIST_TYPE', 'DISA_ID', 'ISLAND_NAM', 'ISLAND_ID', 'BAY_SPLINT', 'BAY_ID', 'COABDIS_ID', 'COABDIS_AR'],\n",
      "      dtype='object')\n",
      "Before drop ['$REF_X', 'ID', '$METADATA_GEOCODE', 'FIPS_CODE', 'PARCEL_APN', 'ASSESSMENT_APN', 'CENSUS_BLOCK_GROUP', 'CENSUS_TRACT', 'COUNTYNAME', 'DERIVED_CALCULATEDLOTAREA', 'USE_CODE_MUNI', 'USE_CODE_MUNI_DESC', 'USE_CODE_STD_LPS', 'USE_CODE_STD_DESC_LPS', 'LANDUSE_NORMALIZED_CATEGORYDESCRIPTION', 'SITE_ADDR', 'LOCATION_COUNTRYCODE', 'SITE_CITY', 'SITE_STATE', 'SITE_ZIP', 'OCCUPANT_OWNER', 'OPPORTUNITYZONE', 'YR_BLT', 'PRIMARYSTRUCTURE_YEARRENOVATED', 'PRIMARYSTRUCTURE_UNITS_X', 'LIVING_SQFT', 'SUBDIVISION', 'STRUCTURES', 'GEOMETRY', 'AOI_INDEX', 'AOI_FIRE_NAME', 'AOI_INCIDENT_N', 'AOI_START_DATE', 'AOI_GROUP_ID', 'AOI_FP_SOURCE', '$REF_Y', 'ASSMT_APN', 'ASSMT_ID', 'PARCEL_$REF', 'PARCEL_ID', '$METADATA', 'ASSESSEDVALUE_TOTAL', 'ASSESSEDVALUE_YEAR', 'ASSESSEDLOTSIZE', 'LOT_LOTNUMBER', 'LOT_BLOCKNUMBER', 'ZONING_ASSESSMENT', 'TRANSACTION_MULTIPLEAPNFLAG', 'STORIES_NUMBER', 'ASSMT_YRBLT', 'PRIMARYSTRUCTURE_BUILDINGAREA', 'PRIMARYSTRUCTURE_UNITS_Y', 'ASSMT_SQFT', 'PRIMARYSTRUCTURE_NUMBEROFBUILDINGS', 'ASST_GEOM', 'CENTROID', 'INDEX_RIGHT', 'COUNTY', 'CO_NUM', 'BASIN_NAME', 'BASA_ID', 'DIS_NAME', 'DIST_TYPE', 'DISA_ID', 'ISLAND_NAM', 'ISLAND_ID', 'BAY_SPLINT', 'BAY_ID', 'COABDIS_ID', 'COABDIS_AR', 'USECODE_SD', 'PARCEL_CAT', 'CAT', 'INCIDENTNAME', 'CLEAN_DATE', 'YEAR', 'MONTH', 'FP_SQFT', 'FP_PMFT', 'SQFT', 'SQFT_SOURCE']\n",
      "Missing columns: {'OBJECTID', 'TOTAL_ROOMS', 'geometry', 'CO_NAME', 'CITY', 'STREETSUFFIX', 'STRUCTURETYPE', 'BEDROOMS', 'SITE_DIRECTION', 'HAZARDTYPE', 'SITE_UNIT_PREFIX', 'APN', 'STRUCTURECATEGORY', 'INCIDENTSTARTDATE', 'PARCEL_CAT_MATCH', 'SITE_HOUSE_NUMBER', 'SITEADDRESS', 'FEMA_SQFT', 'INCIDENTNUM', 'YEARBUILT', 'ZONING', 'ZIPCODE', 'FEMA_PMFT', 'SITE_UNIT_NUMBER', 'STREETNUMBER', 'GLOBALID', 'DAMAGE', 'STATE', 'UNITS_NUMBER', 'CALFIREUNIT', 'TOTAL_BATHS', 'centroid', 'COMMUNITY', 'STREETTYPE', 'STREETNAME', 'SQFEET'}\n",
      "Estimating emissions for pollutants: ['CO', 'NOx', 'SOx', 'PM', 'TOG']...\n",
      "C:\\Users\\gstarrs\\Projects\\CARB\\SWEEP\\sweep_test\\data\\emissions_factors\n",
      "Holder efs from: C:\\Users\\gstarrs\\Projects\\CARB\\SWEEP\\sweep_test\\data\\emissions_factors\\Holder_EFs.xlsx\n",
      "Requested pollutants: ['CO', 'NOx', 'SOx', 'PM', 'TOG']\n",
      "Returned pollutants: ['CO' 'NOx' 'SOx' 'PM' 'TOG']\n",
      "Aggregating report by: ['AIR DISTRICT', 'AOI_INDEX']...\n",
      "Aggregating on: ['AIR DISTRICT', 'AOI_INDEX']\n",
      "Calculating vehicle emissions with CARB factors...\n",
      "149\n",
      "Ratio provided: 214.56 vehicles estimated using ratio: 1.44\n",
      "CARB efs from: C:\\Users\\gstarrs\\Projects\\CARB\\SWEEP\\sweep_test\\data\\emissions_factors\\CARB_EFs.xlsx\n",
      "Requested pollutants: ['CO', 'NOx', 'SOx', 'PM']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Returned pollutants: ['CO' 'NOx' 'SOx' 'PM']\n",
      "Processing complete.\n",
      "Returned pollutants: ['CO' 'NOx' 'SOx' 'PM']\n",
      "Processing complete.\n"
     ]
    }
   ],
   "source": [
    "# The function produces three outputs:\n",
    "# 1. A geopandas gdf of emissions per parcel with square footage information with centroid geometry.\n",
    "# 2. A table aggregating the data by user-specified criteria from a list.\n",
    "# 3. A table of emissions from vehicles estimated either by count (user provided) or by ratio of vehicle to structure (default is 1.44)\n",
    "\n",
    "predicted_emissions_gdf, agg_table, vehicle_table = main(\n",
    "    aoi_source = aoi,\n",
    "    # You need a lightbox API key to get the parcel data.\n",
    "    api_key = os.getenv('LB_API_KEY'),\n",
    "    ratio_destroyed = 0.8,\n",
    "    pollutants = None, \n",
    "    aggregate_fields = ['AIR DISTRICT', 'AOI_INDEX'],\n",
    "    write = \"No\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "EPSG:3310\n",
      "EPSG:3310\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>AOI_INDEX</th>\n",
       "      <th>AOI_FIRE_NAME</th>\n",
       "      <th>AOI_INCIDENT_N</th>\n",
       "      <th>AOI_START_DATE</th>\n",
       "      <th>AOI_GROUP_ID</th>\n",
       "      <th>AOI_FP_SOURCE</th>\n",
       "      <th>INCIDENTNAME</th>\n",
       "      <th>START_DATE</th>\n",
       "      <th>DAMAGE</th>\n",
       "      <th>CAT</th>\n",
       "      <th>SQFT</th>\n",
       "      <th>SQFT_SOURCE</th>\n",
       "      <th>COUNTY</th>\n",
       "      <th>AIR_BASIN</th>\n",
       "      <th>AIR_DISTRICT</th>\n",
       "      <th>CONSUMPTION_FACTOR</th>\n",
       "      <th>FRAME_FACTOR</th>\n",
       "      <th>CONTENTS_FACTOR</th>\n",
       "      <th>geometry</th>\n",
       "      <th>E_CO_TN</th>\n",
       "      <th>E_NOX_TN</th>\n",
       "      <th>E_SOX_TN</th>\n",
       "      <th>E_PM_TN</th>\n",
       "      <th>E_TOG_TN</th>\n",
       "      <th>MONTH</th>\n",
       "      <th>YEAR</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Mosquito</td>\n",
       "      <td>CATNF 001371</td>\n",
       "      <td>2022-09-06</td>\n",
       "      <td>Mosquito_CATNF 001371_2022-09-06</td>\n",
       "      <td>FRAP</td>\n",
       "      <td>SWEEP202506101112</td>\n",
       "      <td>2025-06-10</td>\n",
       "      <td>Destroyed (&gt;50%)</td>\n",
       "      <td>SR</td>\n",
       "      <td>145.724907</td>\n",
       "      <td>PARCEL</td>\n",
       "      <td>PLACER</td>\n",
       "      <td>MOUNTAIN COUNTIES</td>\n",
       "      <td>Placer</td>\n",
       "      <td>0.95</td>\n",
       "      <td>31.07</td>\n",
       "      <td>5.87</td>\n",
       "      <td>POINT (-72862.95 110016.358)</td>\n",
       "      <td>0.176</td>\n",
       "      <td>0.001</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.100</td>\n",
       "      <td>0.007</td>\n",
       "      <td>6</td>\n",
       "      <td>2025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>Mosquito</td>\n",
       "      <td>CATNF 001371</td>\n",
       "      <td>2022-09-06</td>\n",
       "      <td>Mosquito_CATNF 001371_2022-09-06</td>\n",
       "      <td>FRAP</td>\n",
       "      <td>SWEEP202506101112</td>\n",
       "      <td>2025-06-10</td>\n",
       "      <td>No Damage</td>\n",
       "      <td>MR</td>\n",
       "      <td>171.747212</td>\n",
       "      <td>PARCEL</td>\n",
       "      <td>PLACER</td>\n",
       "      <td>MOUNTAIN COUNTIES</td>\n",
       "      <td>Placer</td>\n",
       "      <td>0.00</td>\n",
       "      <td>31.07</td>\n",
       "      <td>5.87</td>\n",
       "      <td>POINT (-72675.094 110682.073)</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>6</td>\n",
       "      <td>2025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>Mosquito</td>\n",
       "      <td>CATNF 001371</td>\n",
       "      <td>2022-09-06</td>\n",
       "      <td>Mosquito_CATNF 001371_2022-09-06</td>\n",
       "      <td>FRAP</td>\n",
       "      <td>SWEEP202506101112</td>\n",
       "      <td>2025-06-10</td>\n",
       "      <td>Destroyed (&gt;50%)</td>\n",
       "      <td>SR</td>\n",
       "      <td>79.925651</td>\n",
       "      <td>PARCEL</td>\n",
       "      <td>PLACER</td>\n",
       "      <td>MOUNTAIN COUNTIES</td>\n",
       "      <td>Placer</td>\n",
       "      <td>0.95</td>\n",
       "      <td>31.07</td>\n",
       "      <td>5.87</td>\n",
       "      <td>POINT (-72964.239 109972.738)</td>\n",
       "      <td>0.097</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.055</td>\n",
       "      <td>0.004</td>\n",
       "      <td>6</td>\n",
       "      <td>2025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>Mosquito</td>\n",
       "      <td>CATNF 001371</td>\n",
       "      <td>2022-09-06</td>\n",
       "      <td>Mosquito_CATNF 001371_2022-09-06</td>\n",
       "      <td>FRAP</td>\n",
       "      <td>SWEEP202506101112</td>\n",
       "      <td>2025-06-10</td>\n",
       "      <td>Destroyed (&gt;50%)</td>\n",
       "      <td>MR</td>\n",
       "      <td>98.884758</td>\n",
       "      <td>PARCEL</td>\n",
       "      <td>PLACER</td>\n",
       "      <td>MOUNTAIN COUNTIES</td>\n",
       "      <td>Placer</td>\n",
       "      <td>0.95</td>\n",
       "      <td>31.07</td>\n",
       "      <td>5.87</td>\n",
       "      <td>POINT (-73128.236 110051.244)</td>\n",
       "      <td>0.120</td>\n",
       "      <td>0.001</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.068</td>\n",
       "      <td>0.005</td>\n",
       "      <td>6</td>\n",
       "      <td>2025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>Mosquito</td>\n",
       "      <td>CATNF 001371</td>\n",
       "      <td>2022-09-06</td>\n",
       "      <td>Mosquito_CATNF 001371_2022-09-06</td>\n",
       "      <td>FRAP</td>\n",
       "      <td>SWEEP202506101112</td>\n",
       "      <td>2025-06-10</td>\n",
       "      <td>No Damage</td>\n",
       "      <td>COM</td>\n",
       "      <td>1477.881041</td>\n",
       "      <td>PARCEL</td>\n",
       "      <td>PLACER</td>\n",
       "      <td>MOUNTAIN COUNTIES</td>\n",
       "      <td>Placer</td>\n",
       "      <td>0.00</td>\n",
       "      <td>31.07</td>\n",
       "      <td>5.87</td>\n",
       "      <td>POINT (-72557.727 111000.702)</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>6</td>\n",
       "      <td>2025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>182</th>\n",
       "      <td>1</td>\n",
       "      <td>River</td>\n",
       "      <td>CANEU 020628</td>\n",
       "      <td>2021-08-04</td>\n",
       "      <td>River_CANEU 020628_2021-08-04</td>\n",
       "      <td>FRAP</td>\n",
       "      <td>SWEEP202506101112</td>\n",
       "      <td>2025-06-10</td>\n",
       "      <td>Destroyed (&gt;50%)</td>\n",
       "      <td>SR</td>\n",
       "      <td>330.483271</td>\n",
       "      <td>PARCEL</td>\n",
       "      <td>NEVADA</td>\n",
       "      <td>MOUNTAIN COUNTIES</td>\n",
       "      <td>Northern Sierra</td>\n",
       "      <td>0.95</td>\n",
       "      <td>31.07</td>\n",
       "      <td>5.87</td>\n",
       "      <td>POINT (-83979.742 125621.671)</td>\n",
       "      <td>0.400</td>\n",
       "      <td>0.002</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.228</td>\n",
       "      <td>0.017</td>\n",
       "      <td>6</td>\n",
       "      <td>2025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>1</td>\n",
       "      <td>River</td>\n",
       "      <td>CANEU 020628</td>\n",
       "      <td>2021-08-04</td>\n",
       "      <td>River_CANEU 020628_2021-08-04</td>\n",
       "      <td>FRAP</td>\n",
       "      <td>SWEEP202506101112</td>\n",
       "      <td>2025-06-10</td>\n",
       "      <td>Destroyed (&gt;50%)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>78.066914</td>\n",
       "      <td>PARCEL</td>\n",
       "      <td>NEVADA</td>\n",
       "      <td>MOUNTAIN COUNTIES</td>\n",
       "      <td>Northern Sierra</td>\n",
       "      <td>0.95</td>\n",
       "      <td>31.07</td>\n",
       "      <td>5.87</td>\n",
       "      <td>POINT (-84249.63 125694.995)</td>\n",
       "      <td>0.095</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.054</td>\n",
       "      <td>0.004</td>\n",
       "      <td>6</td>\n",
       "      <td>2025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>184</th>\n",
       "      <td>1</td>\n",
       "      <td>River</td>\n",
       "      <td>CANEU 020628</td>\n",
       "      <td>2021-08-04</td>\n",
       "      <td>River_CANEU 020628_2021-08-04</td>\n",
       "      <td>FRAP</td>\n",
       "      <td>SWEEP202506101112</td>\n",
       "      <td>2025-06-10</td>\n",
       "      <td>Destroyed (&gt;50%)</td>\n",
       "      <td>SR</td>\n",
       "      <td>189.684015</td>\n",
       "      <td>PARCEL</td>\n",
       "      <td>NEVADA</td>\n",
       "      <td>MOUNTAIN COUNTIES</td>\n",
       "      <td>Northern Sierra</td>\n",
       "      <td>0.95</td>\n",
       "      <td>31.07</td>\n",
       "      <td>5.87</td>\n",
       "      <td>POINT (-83719.572 125628.886)</td>\n",
       "      <td>0.230</td>\n",
       "      <td>0.001</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.131</td>\n",
       "      <td>0.010</td>\n",
       "      <td>6</td>\n",
       "      <td>2025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>185</th>\n",
       "      <td>1</td>\n",
       "      <td>River</td>\n",
       "      <td>CANEU 020628</td>\n",
       "      <td>2021-08-04</td>\n",
       "      <td>River_CANEU 020628_2021-08-04</td>\n",
       "      <td>FRAP</td>\n",
       "      <td>SWEEP202506101112</td>\n",
       "      <td>2025-06-10</td>\n",
       "      <td>Destroyed (&gt;50%)</td>\n",
       "      <td>SR</td>\n",
       "      <td>130.855019</td>\n",
       "      <td>PARCEL</td>\n",
       "      <td>NEVADA</td>\n",
       "      <td>MOUNTAIN COUNTIES</td>\n",
       "      <td>Northern Sierra</td>\n",
       "      <td>0.95</td>\n",
       "      <td>31.07</td>\n",
       "      <td>5.87</td>\n",
       "      <td>POINT (-83736.685 125808.19)</td>\n",
       "      <td>0.158</td>\n",
       "      <td>0.001</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.090</td>\n",
       "      <td>0.007</td>\n",
       "      <td>6</td>\n",
       "      <td>2025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>186</th>\n",
       "      <td>1</td>\n",
       "      <td>River</td>\n",
       "      <td>CANEU 020628</td>\n",
       "      <td>2021-08-04</td>\n",
       "      <td>River_CANEU 020628_2021-08-04</td>\n",
       "      <td>FRAP</td>\n",
       "      <td>SWEEP202506101112</td>\n",
       "      <td>2025-06-10</td>\n",
       "      <td>Destroyed (&gt;50%)</td>\n",
       "      <td>SR</td>\n",
       "      <td>123.884758</td>\n",
       "      <td>PARCEL</td>\n",
       "      <td>NEVADA</td>\n",
       "      <td>MOUNTAIN COUNTIES</td>\n",
       "      <td>Northern Sierra</td>\n",
       "      <td>0.95</td>\n",
       "      <td>31.07</td>\n",
       "      <td>5.87</td>\n",
       "      <td>POINT (-84113.442 125849.544)</td>\n",
       "      <td>0.150</td>\n",
       "      <td>0.001</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.085</td>\n",
       "      <td>0.006</td>\n",
       "      <td>6</td>\n",
       "      <td>2025</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>187 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     AOI_INDEX AOI_FIRE_NAME AOI_INCIDENT_N AOI_START_DATE                      AOI_GROUP_ID  ... E_SOX_TN E_PM_TN E_TOG_TN MONTH  YEAR\n",
       "0            0      Mosquito   CATNF 001371     2022-09-06  Mosquito_CATNF 001371_2022-09-06  ...      0.0   0.100    0.007     6  2025\n",
       "1            0      Mosquito   CATNF 001371     2022-09-06  Mosquito_CATNF 001371_2022-09-06  ...      0.0   0.000    0.000     6  2025\n",
       "2            0      Mosquito   CATNF 001371     2022-09-06  Mosquito_CATNF 001371_2022-09-06  ...      0.0   0.055    0.004     6  2025\n",
       "3            0      Mosquito   CATNF 001371     2022-09-06  Mosquito_CATNF 001371_2022-09-06  ...      0.0   0.068    0.005     6  2025\n",
       "4            0      Mosquito   CATNF 001371     2022-09-06  Mosquito_CATNF 001371_2022-09-06  ...      0.0   0.000    0.000     6  2025\n",
       "..         ...           ...            ...            ...                               ...  ...      ...     ...      ...   ...   ...\n",
       "182          1         River   CANEU 020628     2021-08-04     River_CANEU 020628_2021-08-04  ...      0.0   0.228    0.017     6  2025\n",
       "183          1         River   CANEU 020628     2021-08-04     River_CANEU 020628_2021-08-04  ...      0.0   0.054    0.004     6  2025\n",
       "184          1         River   CANEU 020628     2021-08-04     River_CANEU 020628_2021-08-04  ...      0.0   0.131    0.010     6  2025\n",
       "185          1         River   CANEU 020628     2021-08-04     River_CANEU 020628_2021-08-04  ...      0.0   0.090    0.007     6  2025\n",
       "186          1         River   CANEU 020628     2021-08-04     River_CANEU 020628_2021-08-04  ...      0.0   0.085    0.006     6  2025\n",
       "\n",
       "[187 rows x 26 columns]"
      ]
     },
     "execution_count": null,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# In the returned dataframes, columns from the aoi_source are retained and tagged with \"AOI\" at the start of the column.\n",
    "# predicted_emissions_gdf is a geodataframe of each record used to estimate emissions.\n",
    "# These are parcels that fell within the AOI and were populated with data for living squarefootage.\n",
    "print(predicted_emissions_gdf.crs)\n",
    "predicted_emissions_gdf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": null,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x1000 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Read AOI layer\n",
    "aoi_gdf = aoi.to_crs(predicted_emissions_gdf.crs)\n",
    "\n",
    "# Create plot\n",
    "fig, ax = plt.subplots(figsize=(10, 10))\n",
    "\n",
    "# Plot AOI in light gray\n",
    "aoi_gdf.plot(ax=ax, color='none', edgecolor='lightgray', linewidth=1)\n",
    "\n",
    "# Compute marker sizes based on E_CO_TN (adjust scaling factor as needed)\n",
    "sizes = predicted_emissions_gdf[\"E_CO_TN\"].fillna(0) * 5\n",
    "\n",
    "# Plot predicted emissions with symbol size proportional to E_CO_TN\n",
    "predicted_emissions_gdf.plot(\n",
    "    ax=ax,\n",
    "    color='orange',\n",
    "    alpha=0.6,\n",
    "    markersize=sizes\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>AIR_DISTRICT</th>\n",
       "      <th>AOI_INDEX</th>\n",
       "      <th>E_CO_TN</th>\n",
       "      <th>E_NOX_TN</th>\n",
       "      <th>E_SOX_TN</th>\n",
       "      <th>E_PM_TN</th>\n",
       "      <th>E_TOG_TN</th>\n",
       "      <th>DAMAGED_STRUCTURES</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>El Dorado</td>\n",
       "      <td>0</td>\n",
       "      <td>1.29</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.74</td>\n",
       "      <td>0.05</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Northern Sierra</td>\n",
       "      <td>1</td>\n",
       "      <td>9.64</td>\n",
       "      <td>0.05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.49</td>\n",
       "      <td>0.40</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Placer</td>\n",
       "      <td>0</td>\n",
       "      <td>12.24</td>\n",
       "      <td>0.06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.97</td>\n",
       "      <td>0.51</td>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Placer</td>\n",
       "      <td>1</td>\n",
       "      <td>5.29</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.01</td>\n",
       "      <td>0.22</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      AIR_DISTRICT  AOI_INDEX  E_CO_TN  E_NOX_TN  E_SOX_TN  E_PM_TN  E_TOG_TN  DAMAGED_STRUCTURES\n",
       "0        El Dorado          0     1.29      0.01       0.0     0.74      0.05                   8\n",
       "1  Northern Sierra          1     9.64      0.05       0.0     5.49      0.40                  45\n",
       "2           Placer          0    12.24      0.06       0.0     6.97      0.51                  66\n",
       "3           Placer          1     5.29      0.03       0.0     3.01      0.22                  22"
      ]
     },
     "execution_count": null,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# In this demo run, we provided \"AIR DISTRICT\" and \"AOI_INDEX\" as the aggregation fields.\n",
    "# As you can see our results are split by AOI_INDEX (the polygon) and AIR_DISTRICT.\n",
    "# We get total emissions for each polygon in each air district.\n",
    "\n",
    "agg_table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>AIR_DISTRICT</th>\n",
       "      <th>AOI_INDEX</th>\n",
       "      <th>E_CO_TN</th>\n",
       "      <th>E_NOX_TN</th>\n",
       "      <th>E_SOX_TN</th>\n",
       "      <th>E_PM_TN</th>\n",
       "      <th>E_TOG_TN</th>\n",
       "      <th>DAMAGED_STRUCTURES</th>\n",
       "      <th>AOI_FIRE_NAME</th>\n",
       "      <th>AOI_INCIDENT_N</th>\n",
       "      <th>AOI_START_DATE</th>\n",
       "      <th>AOI_GROUP_ID</th>\n",
       "      <th>AOI_FP_SOURCE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>El Dorado</td>\n",
       "      <td>0</td>\n",
       "      <td>1.29</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.74</td>\n",
       "      <td>0.05</td>\n",
       "      <td>8</td>\n",
       "      <td>Mosquito</td>\n",
       "      <td>CATNF 001371</td>\n",
       "      <td>2022-09-06</td>\n",
       "      <td>Mosquito_CATNF 001371_2022-09-06</td>\n",
       "      <td>FRAP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Northern Sierra</td>\n",
       "      <td>1</td>\n",
       "      <td>9.64</td>\n",
       "      <td>0.05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.49</td>\n",
       "      <td>0.40</td>\n",
       "      <td>45</td>\n",
       "      <td>River</td>\n",
       "      <td>CANEU 020628</td>\n",
       "      <td>2021-08-04</td>\n",
       "      <td>River_CANEU 020628_2021-08-04</td>\n",
       "      <td>FRAP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Placer</td>\n",
       "      <td>0</td>\n",
       "      <td>12.24</td>\n",
       "      <td>0.06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.97</td>\n",
       "      <td>0.51</td>\n",
       "      <td>66</td>\n",
       "      <td>Mosquito</td>\n",
       "      <td>CATNF 001371</td>\n",
       "      <td>2022-09-06</td>\n",
       "      <td>Mosquito_CATNF 001371_2022-09-06</td>\n",
       "      <td>FRAP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Placer</td>\n",
       "      <td>1</td>\n",
       "      <td>5.29</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.01</td>\n",
       "      <td>0.22</td>\n",
       "      <td>22</td>\n",
       "      <td>River</td>\n",
       "      <td>CANEU 020628</td>\n",
       "      <td>2021-08-04</td>\n",
       "      <td>River_CANEU 020628_2021-08-04</td>\n",
       "      <td>FRAP</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      AIR_DISTRICT  AOI_INDEX  E_CO_TN  E_NOX_TN  E_SOX_TN  ...  AOI_FIRE_NAME  AOI_INCIDENT_N  AOI_START_DATE                      AOI_GROUP_ID AOI_FP_SOURCE\n",
       "0        El Dorado          0     1.29      0.01       0.0  ...       Mosquito    CATNF 001371      2022-09-06  Mosquito_CATNF 001371_2022-09-06          FRAP\n",
       "1  Northern Sierra          1     9.64      0.05       0.0  ...          River    CANEU 020628      2021-08-04     River_CANEU 020628_2021-08-04          FRAP\n",
       "2           Placer          0    12.24      0.06       0.0  ...       Mosquito    CATNF 001371      2022-09-06  Mosquito_CATNF 001371_2022-09-06          FRAP\n",
       "3           Placer          1     5.29      0.03       0.0  ...          River    CANEU 020628      2021-08-04     River_CANEU 020628_2021-08-04          FRAP\n",
       "\n",
       "[4 rows x 13 columns]"
      ]
     },
     "execution_count": null,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# We can use the full dataframe to add other AOI attributes back in:\n",
    "aoi_cols = [col for col in predicted_emissions_gdf.columns if col.startswith(\"AOI_\")]\n",
    "\n",
    "# 2. Drop duplicates to get unique AOI records\n",
    "unique_aoi = predicted_emissions_gdf[aoi_cols].drop_duplicates()\n",
    "\n",
    "# 3. Merge with agg_table on AOI_INDEX\n",
    "agg_table_aoi = agg_table.merge(unique_aoi, on=\"AOI_INDEX\", how=\"left\")\n",
    "agg_table_aoi"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>AIR_DISTRICT</th>\n",
       "      <th>AOI_INDEX</th>\n",
       "      <th>E_CO_TN</th>\n",
       "      <th>E_NOX_TN</th>\n",
       "      <th>E_SOX_TN</th>\n",
       "      <th>E_PM_TN</th>\n",
       "      <th>E_TOG_TN</th>\n",
       "      <th>DAMAGED_STRUCTURES</th>\n",
       "      <th>AOI_FIRE_NAME</th>\n",
       "      <th>AOI_INCIDENT_N</th>\n",
       "      <th>AOI_START_DATE</th>\n",
       "      <th>AOI_GROUP_ID</th>\n",
       "      <th>AOI_FP_SOURCE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>El Dorado</td>\n",
       "      <td>0</td>\n",
       "      <td>1.69</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.96</td>\n",
       "      <td>0.07</td>\n",
       "      <td>10</td>\n",
       "      <td>Mosquito</td>\n",
       "      <td>CATNF 001371</td>\n",
       "      <td>2022-09-06</td>\n",
       "      <td>Mosquito_CATNF 001371_2022-09-06</td>\n",
       "      <td>FRAP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Northern Sierra</td>\n",
       "      <td>1</td>\n",
       "      <td>11.98</td>\n",
       "      <td>0.06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.82</td>\n",
       "      <td>0.50</td>\n",
       "      <td>56</td>\n",
       "      <td>River</td>\n",
       "      <td>CANEU 020628</td>\n",
       "      <td>2021-08-04</td>\n",
       "      <td>River_CANEU 020628_2021-08-04</td>\n",
       "      <td>FRAP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Placer</td>\n",
       "      <td>0</td>\n",
       "      <td>15.98</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.10</td>\n",
       "      <td>0.66</td>\n",
       "      <td>78</td>\n",
       "      <td>Mosquito</td>\n",
       "      <td>CATNF 001371</td>\n",
       "      <td>2022-09-06</td>\n",
       "      <td>Mosquito_CATNF 001371_2022-09-06</td>\n",
       "      <td>FRAP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Placer</td>\n",
       "      <td>1</td>\n",
       "      <td>7.60</td>\n",
       "      <td>0.04</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.33</td>\n",
       "      <td>0.32</td>\n",
       "      <td>34</td>\n",
       "      <td>River</td>\n",
       "      <td>CANEU 020628</td>\n",
       "      <td>2021-08-04</td>\n",
       "      <td>River_CANEU 020628_2021-08-04</td>\n",
       "      <td>FRAP</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      AIR_DISTRICT  AOI_INDEX  E_CO_TN  E_NOX_TN  E_SOX_TN  ...  AOI_FIRE_NAME  AOI_INCIDENT_N  AOI_START_DATE                      AOI_GROUP_ID AOI_FP_SOURCE\n",
       "0        El Dorado          0     1.69      0.01       0.0  ...       Mosquito    CATNF 001371      2022-09-06  Mosquito_CATNF 001371_2022-09-06          FRAP\n",
       "1  Northern Sierra          1    11.98      0.06       0.0  ...          River    CANEU 020628      2021-08-04     River_CANEU 020628_2021-08-04          FRAP\n",
       "2           Placer          0    15.98      0.08       0.0  ...       Mosquito    CATNF 001371      2022-09-06  Mosquito_CATNF 001371_2022-09-06          FRAP\n",
       "3           Placer          1     7.60      0.04       0.0  ...          River    CANEU 020628      2021-08-04     River_CANEU 020628_2021-08-04          FRAP\n",
       "\n",
       "[4 rows x 13 columns]"
      ]
     },
     "execution_count": null,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": []
  }
 ],
 "metadata": {
  "language_info": {
   "name": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
